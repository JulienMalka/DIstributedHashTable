Using master branch for submission. (sha: b4a7d8b337707908bf5464440631d584bc83322f)
--------
Checking for expected files
Found expected file done/tests.h on master
Found expected file done/args.c on master
Found expected file done/node.c on master
Found expected file done/system.h on master
Found expected file done/config.h on master
Found expected file done/network.h on master
Found expected file done/network.c on master
Found expected file done/hashtable.c on master
Found expected file done/pps-client-find.c on master
Found expected file done/Makefile on master
Found expected file done/client.h on master
Found expected file done/pps-client-put.c on master
Found expected file done/util.c on master
Found expected file done/pps-client-substr.c on master
Found expected file done/log-packets.c on master
Found expected file done/pps-client-cat.c on master
Found expected file done/util.h on master
Found expected file done/node_list.h on master
Found expected file done/pps-dump-node.c on master
Found expected file done/ring.h on master
Found expected file done/pps-launch-server.c on master
Found expected file done/test-hashtable.c on master
Found expected file done/pps-list-nodes.c on master
Found expected file done/hashtable.h on master
Found expected file done/pps-client-get.c on master
Found expected file done/client.c on master
Found expected file done/node.h on master
Found expected file done/args.h on master
Found expected file done/node_list.c on master
Found expected file done/error.c on master
Found expected file done/system.c on master
Found expected file done/error.h on master
--------
Force copying (overwriting) provided file: tests.h
Force copying (overwriting) provided file: system.h
Force copying (overwriting) provided file: config.h
Force copying (overwriting) provided file: network.h
Force copying (overwriting) provided file: util.c
Force copying (overwriting) provided file: log-packets.c
Force copying (overwriting) provided file: util.h
Force copying (overwriting) provided file: ring.h
Force copying (overwriting) provided file: error.c
Force copying (overwriting) provided file: system.c
Force copying (overwriting) provided file: error.h
Got error code 2 when running trying to build target 'test-hashtable' with command 'make test-hashtable'
stdout: gcc -o test-hashtable test-hashtable.c node_list.o error.o node.o system.o -lcheck -lm -lrt -pthread -lsubunit
Makefile:37: recipe for target 'test-hashtable' failed

---
stderr: gcc: error: error.o: No such file or directory
make: *** [test-hashtable] Error 1

Got error code 2 when running trying to build target 'test-hashtable' with command 'make'
stdout: cc -g -std=c99 -pedantic -Wall -Wextra   -c -o pps-launch-server.o pps-launch-server.c
cc   pps-launch-server.o system.o network.o hashtable.o network-utils.o util.o   -o pps-launch-server
cc -g -std=c99 -pedantic -Wall -Wextra   -c -o pps-client-put.o pps-client-put.c
cc   pps-client-put.o client.o node.o network.o system.o node_list.o network-utils.o hashtable.o args.o util.o   -o pps-client-put
gcc -o test-hashtable test-hashtable.c node_list.o error.o node.o system.o -lcheck -lm -lrt -pthread -lsubunit
Makefile:37: recipe for target 'test-hashtable' failed

---
stderr: gcc: error: error.o: No such file or directory
make: *** [test-hashtable] Error 1

Got error code 2 when running trying to build target 'test-hashtable' with command '[staff makefile]'
Got error code 2 when running trying to build target 'test-hashtable' with command '[staff makefile]'
Unable to build target 'test-hashtable'
Unable to run test-hashtable. Executable couldn't build

-------------------------
Running test scripts


Test 05.basic.sh returned code 0
stdout:
>> running 05.basic.sh
Test 1 (server launch): PASS
Test 2 (client put): PASS
Test 3 (client get): PASS
SUCCESS

------
stderr:

-----------
Test 06.basic.sh returned code 0
stdout:
>> running 06.basic.sh
Test 1 (launch 1st server): PASS
Test 2 (launch 2nd server): PASS
Test 3 (put, 2 servers): PASS
Test 4 (get, 2 servers): PASS
SUCCESS

------
stderr:

-----------
Test 07.basic.sh returned code 0
stdout:
>> running 07.basic.sh
Test 1 (launch 1st server): PASS
Test 2 (launch 2nd server): PASS
Test 3 (put, 2 servers): PASS
Test 4 (get, 2 servers): PASS
SUCCESS

------
stderr:

-----------
Test 08.basic.sh returned code 0
stdout:
>> running 08.basic.sh
Test 1 (launch server): PASS
Test 2 (list server): PASS
Test 3 (list failed servers): PASS
Test 4 (dump server): PASS
PASS
PASS
SUCCESS

------
stderr:

-----------
Test 09.basic-find.sh returned code 0
stdout:
>> running 09.basic-find.sh
Test 1 (launch server): PASS
PASS
PASS
Test 2 (put a): PASS
Test 3 (put b): PASS
Test 4 (find existing): PASS
Test 5 (put c): PASS
Test 6 (find non-existing): PASS
SUCCESS

------
stderr:

-----------
Test 10.basic-quorum.sh returned code 0
stdout:
>> running 10.basic-quorum.sh
Test 1 (launch server): PASS
PASS
PASS
Test 2 (put s servers 1,2): PASS
Test 3 (put s server 3): PASS
Test 4 (get result aab 2/3): PASS
Test 5 (get result aab 2/2): PASS
Test 6 (get result aab 3/3): PASS
Test 7 (put s servers 1,3): PASS
Test 8 (put s server 2): PASS
Test 9 (get result aba 2/3): PASS
Test 10 (get result aba 2/2): PASS
Test 11 (get result aba 3/3): PASS
Test 12 (put s servers 1,3): PASS
Test 13 (put s server 2): PASS
Test 14 (get result baa 2/3): PASS
Test 15 (get result baa 2/2): PASS
Test 16 (get result baa 3/3): PASS
SUCCESS

------
stderr:

-----------
Test 09.basic-substr.sh returned code 0
stdout:
>> running 09.basic-substr.sh
Test 1 (launch server): PASS
PASS
PASS
Test 2 (put a): PASS
Test 3 (substr positive offset): PASS
Test 4 (get result): PASS
Test 5 (substr negative offset): PASS
Test 6 (get result): PASS
SUCCESS

------
stderr:

-----------
Test 09.basic-cat.sh returned code 0
stdout:
>> running 09.basic-cat.sh
Test 1 (launch server): PASS
PASS
PASS
Test 2 (put a): PASS
Test 3 (put b): PASS
Test 4 (cat a+b): PASS
Test 5 (get result): PASS
SUCCESS

------
stderr:


